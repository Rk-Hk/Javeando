/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GrafoCaminoCorto;

import Vista.Inicio;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author RIKARDO
 */
public class GrafoEmpresa extends javax.swing.JFrame {

    /**
     * Creates new form GrafoEmpresa
     */
    
    Grafo grafo = new Grafo();
    Nodo nodoInicio = null;
    private Nodo nodoFin = null,nodoFin2 = null,nodoFin3 = null,nodoFin4 = null,nodoFin5 = null;
    Disjktra disjktra;
    Disjktra disjktra2;
    Disjktra disjktra3;
    Disjktra disjktra4;
    int longitud,menor,indice;
    int a[]= new int[5];
    
    public GrafoEmpresa() {
        JOptionPane.showMessageDialog(this, "SELECCIONE SU UBICACION", "SISTEMA GPS", JOptionPane.INFORMATION_MESSAGE);
        initComponents();
        IniciarNodosYConectarlos();
        this.setResizable(false);
        this.setLocationRelativeTo(this);
        jLabel3.setText(null);
        jLabel4.setText(null);
        jPanel1.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VOLVER.png")));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, -1, -1));

        jLabel3.setBackground(new java.awt.Color(0, 0, 205));
        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 205));
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 110, -1));

        jLabel1.setBackground(new java.awt.Color(0, 0, 205));
        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 205));
        jLabel1.setText("TIENDA MÁS CERCANA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 160, 20));

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 205));
        jLabel5.setText("DISTANCIA:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 90, 20));

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 205));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 210, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ImagenGrafo.JPG"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        int x = evt.getX();
        int y = evt.getY();
        
        System.out.println(x+"   "+y);
            if(grafo.buscarNodo(x, y)!=null){//si encuentra (x,y) en la lista de nodos
                    grafo.reiniciarGrafoParaDisjktra();
                    grafo.reiniciarColores();    
                    
                    nodoInicio=grafo.buscarNodo(x,y);
                    nodoInicio.getCirculo().setColor(new Color(0, 0, 0));
                    
                    nodoFin = grafo.buscarNodo(200, 369);
                    nodoFin.getCirculo().setColor(new Color(123, 141, 232));
                    nodoFin.getCirculo().setDiametro(15);
                    nodoFin2= grafo.buscarNodo(55, 82);
                    nodoFin2.getCirculo().setColor(new Color(123, 141, 232));
                    nodoFin2.getCirculo().setDiametro(15);
                    nodoFin3= grafo.buscarNodo(469, 246);
                    nodoFin3.getCirculo().setColor(new Color(123, 141, 232));
                    nodoFin3.getCirculo().setDiametro(15);
                    nodoFin4= grafo.buscarNodo(711, 318);
                    nodoFin4.getCirculo().setColor(new Color(123, 141, 232));
                    nodoFin4.getCirculo().setDiametro(15);
                    nodoFin5= grafo.buscarNodo(701, 13);
                    nodoFin5.getCirculo().setColor(new Color(123, 141, 232));
                    nodoFin5.getCirculo().setDiametro(15);
                    
                    disjktra = new Disjktra(grafo);
                    
                    disjktra.ejecutar(nodoInicio);
                    
                    disjktra.rutaCorta(nodoFin);
                    a[0]=disjktra.getPeso();
                    disjktra.setPeso(0);
                    disjktra.rutaCorta(nodoFin2);
                    a[1]=disjktra.getPeso();
                    disjktra.setPeso(0);
                    disjktra.rutaCorta(nodoFin3);
                    a[2]=disjktra.getPeso();
                    disjktra.setPeso(0);
                    disjktra.rutaCorta(nodoFin4);
                    a[3]=disjktra.getPeso();
                    disjktra.setPeso(0);  
                    disjktra.rutaCorta(nodoFin5);
                    a[4]=disjktra.getPeso();
                    disjktra.setPeso(0);
                    
                    menor=a[0];
                    indice=0;
                    for(int i=1;i<5;i++){
                        if(menor>a[i]){
                            menor=a[i];
                            indice=i;
                        }
                    }
                    
                    if(indice==0){
                        disjktra.marcarRutaCorta(nodoFin, Color.red);
                        jLabel4.setText("SR.GATO PLAZA SAN MIGUEL");
                        jLabel3.setText(menor+"  Mtrs");
                    }
                    if(indice==1){
                        disjktra.marcarRutaCorta(nodoFin2, Color.blue);
                        jLabel4.setText("SR.GATO FAUCETT");
                        jLabel3.setText(menor+"  Mtrs");
                    }
                    if(indice==2){
                        disjktra.marcarRutaCorta(nodoFin3, Color.green);
                        jLabel4.setText("SR.GATO PUEBLO LIBRE");
                        jLabel3.setText(menor+"  Mtrs");
                    }
                    if(indice==3){
                        disjktra.marcarRutaCorta(nodoFin4, Color.orange);
                        jLabel4.setText("SR.GATO JESÚS MARÍA");
                        jLabel3.setText(menor+"  Mtrs");
                    }
                    if(indice==4){
                        disjktra.marcarRutaCorta(nodoFin5, Color.magenta);
                        jLabel4.setText("SR.GATO LIMA CENTRO");
                        jLabel3.setText(menor+"  Mtrs");
                    }
                 
                  
                    nodoInicio = null;//null para poder crear mas arista
                    nodoFin = null;//null para poder crear mas         
                    nodoFin2=null;
                    nodoFin3=null;
                    nodoFin4=null;
                    nodoFin5=null;
                   

        }
//         
        DibujandoGrafo();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Inicio i = new Inicio();
        i.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IniciarNodosYConectarlos(){
          crearNodo("N1", 200 , 368);
          crearNodo("N2", 234 , 369);
          crearNodo("N3",310 , 405);
          crearNodo("N4", 454 , 303);
          crearNodo("N5", 464 , 240);
          crearNodo("N6", 272 , 279);
          crearNodo("N7", 270 , 224);
          crearNodo("N8", 255 , 158);
          crearNodo("N9", 276 , 251);
          crearNodo("N10", 445 , 465);
          crearNodo("N11", 519 , 379);
          crearNodo("N12", 556 , 329);
          crearNodo("N13", 618 , 249);
          crearNodo("N14", 694 , 164);
          crearNodo("N15", 531 , 316);
          crearNodo("N16", 550 , 224);
          crearNodo("N17", 576 , 121);
          crearNodo("N18", 236 , 108);
          crearNodo("N19", 182 , 57);
          crearNodo("N20", 270 , 41);
          crearNodo("N21", 393 , 132);
          crearNodo("N22", 511 , 105);
          crearNodo("N23", 483 , 200);
          crearNodo("N24", 401 , 184);
          crearNodo("N25",26 , 323);
          crearNodo("N26", 55 , 187);
          crearNodo("N27", 49 , 77);
          crearNodo("N28", 97 , 364);
          crearNodo("N29", 565 , 20);
          crearNodo("N30", 696 , 8);
          crearNodo("N31", 699 , 104);
          crearNodo("N32", 738 , 42);
          crearNodo("N33", 746 , 169);
          crearNodo("N34", 766 , 345);
          crearNodo("N35", 734 , 235);
          crearNodo("N36", 705 , 312);
          crearNodo("N37", 690 , 371);
          crearNodo("N38", 221 , 171);
          crearNodo("N39", 235 , 257);
          crearNodo("N40", 208 , 332);
          crearNodo("N41", 400 , 433);
          crearNodo("N9", 346 , 311);

        ConectarNodos("N1", "N2", 200);
        ConectarNodos("N2", "N3", 400);
        ConectarNodos("N3", "N4", 800);
        ConectarNodos("N4","N5",620 );
        ConectarNodos("N2", "N6", 600);
        ConectarNodos("N6", "N9", 200);
        ConectarNodos("N9", "N8", 450);
        ConectarNodos("N6", "N4", 790);
        ConectarNodos("N9", "N5", 850);
        ConectarNodos("N10", "N11", 600);
        ConectarNodos("N11", "N12",270 );
        ConectarNodos("N12", "N13", 430);
        ConectarNodos("N13", "N14", 430);       
        ConectarNodos("N11", "N15", 300);
        ConectarNodos("N12", "N15", 200);
        ConectarNodos("N15", "N16", 200);
        ConectarNodos("N5", "N15", 500);
        ConectarNodos("N5", "N16", 400);
        ConectarNodos("N16", "N17", 460);
        ConectarNodos("N14", "N17", 520);
        ConectarNodos("N18", "N20", 400);
        ConectarNodos("N19", "N20", 420);
        ConectarNodos("N8", "N18", 300);
        ConectarNodos("N18", "N19", 400);
        ConectarNodos("N8", "N21", 650);
        ConectarNodos("N21", "N22", 330);
        ConectarNodos("N21", "N24", 1000);
        ConectarNodos("N23", "N24", 400);
        ConectarNodos("N22", "N23", 450);
        ConectarNodos("N17", "N22", 380);
        ConectarNodos("N28", "N1", 420);
        ConectarNodos("N25", "N28", 390);
        ConectarNodos("N25", "N26", 800);
        ConectarNodos("N26", "N27", 650);
        ConectarNodos("N27", "N19", 820);
        ConectarNodos("N20", "N29", 1500);
        ConectarNodos("N29", "N30", 560);
        ConectarNodos("N30", "N31", 420);
        ConectarNodos("N30", "N32", 310);
        ConectarNodos("N32", "N33", 700);
        ConectarNodos("N33", "N34", 830);
        ConectarNodos("N31", "N14", 320);
        ConectarNodos("N33", "N14", 360);
        ConectarNodos("N14", "N35", 300);
        ConectarNodos("N35", "N36", 430);
        ConectarNodos("N36", "N37", 370);
        ConectarNodos("N11", "N37", 830);
        ConectarNodos("N34", "N37", 400);
        ConectarNodos("N13", "N36", 5500);
        ConectarNodos("N26", "N38", 790);
        ConectarNodos("N38", "N39", 4000);
        ConectarNodos("N39", "N40", 400);
        ConectarNodos("N40", "N1", 220);
        ConectarNodos("N26", "N40", 1010);
        ConectarNodos("N8", "N38", 250);
        ConectarNodos("N22", "N29", 600);
        ConectarNodos("N22", "N31", 800);
        ConectarNodos("N3", "N41", 250);
        ConectarNodos("N4", "N41", 600);
        ConectarNodos("N41", "N10", 380);
        ConectarNodos("N5", "N23", 310);
        ConectarNodos("N7","N8", 200);
        ConectarNodos("N7","N9", 200);
    }
    
    public void ConectarNodos(String nodoInicial, String nodoFinal,int peso){
        // PASAMOS POR PARAMETRO LAS CORDENADAS DE DOS NODOS Y EL PESO EN NUESTRO CASO SERAN METROS (DISTANCIA)
            int x1=  grafo.buscarNodo(nodoInicial).getCirculo().getX();
            int y1= grafo.buscarNodo(nodoInicial).getCirculo().getY();

            int x2= grafo.buscarNodo(nodoFinal).getCirculo().getX();
            int y2= grafo.buscarNodo(nodoFinal).getCirculo().getY();
       
             if(grafo.buscarNodo(x1, y1)!=null){ // SI CAPTURMOS UN NODO
                
                if(nodoInicio==null){   
                    
                    nodoInicio = grafo.buscarNodo(x1, y1);//BUSCAMOS EL PRIMER NODO PASADO POR PARAMETRO
                
                    nodoFin= grafo.buscarNodo(x2, y2); // BSUCAMOS EL SEGUNDO NODO PASADO POR PARAMETRO        
              
                crearArista(peso);     // UNIMOS AMBOS NODOS                
                nodoInicio = null;//null para poder crear mas arista
                nodoFin = null;//null para poder crear mas arista
                
                }
                DibujandoGrafo();
            }
        }
 
    public void DibujandoGrafo(){
        jPanel1.paint(jPanel1.getGraphics());
        DibujarArista();
        DibujarNodos();
    }
    
    public void DibujarNodos(){
        ArrayList<Nodo> listaNodo = grafo.getListaNodos();
        for(Nodo nodo:listaNodo){            
            nodo.getCirculo().dibujarCirculo(jPanel1.getGraphics());
        }
    }
    
    
    public void DibujarArista(){
        ArrayList<Nodo> listaNodo = grafo.getListaNodos();
        
        for(int i=0;i<listaNodo.size();i++){
            Nodo nodo= new Nodo();
            nodo= listaNodo.get(i);
       
            
            ArrayList<Enlace> listaEnlace = nodo.getListaNodoAdyacente();
            
            if(listaEnlace != null){
                for(Enlace enlace:listaEnlace){
                    enlace.getArista().getLineaQuebrada().dibujarLineaQuebrada(jPanel1.getGraphics());
                }
            }            
        }
    }
    
  private void crearArista(int distancia){        
        Arista arista = new Arista();
        
        arista.setPeso(distancia);
        // LAS CORDENADAS DEBEN SER GRANDES PARA ABARCAR TODA LA PANTALLA POR ESO 100000,100000
        Coordenadas c = new Coordenadas(100000,100000);
        
        int x1= nodoInicio.getCirculo().getX();
        int d= (int)(nodoInicio.getCirculo().getDiametro())/2;
        int y1= nodoInicio.getCirculo().getY();
     
        c.addCoordenada(x1+d,y1+d);

        int x2= nodoFin.getCirculo().getX();
        int y2= nodoFin.getCirculo().getY();
        
        c.addCoordenada(x2+d,y2+d);
        LineaQuebrada lq = new LineaQuebrada(c);
        arista.setLineaQuebrada(lq);               
        grafo.crearEnlacesNoDirigido(nodoInicio, nodoFin,arista);       
       
    }

  
  private void crearNodo(String nombre ,int x, int y){
        Coordenadas coor = new Coordenadas(10000, 10000, x, y);
           Nodo nodo = new Nodo(nombre, coor);
           nodo.getCirculo().setDiametro(12);
           if(grafo.adjuntarNodo(nodo)){
               nodo.getCirculo().dibujarCirculo(jPanel1.getGraphics());
           }
           else{
               
           }
           nodoInicio = null;
           nodoFin = null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrafoEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrafoEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrafoEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrafoEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GrafoEmpresa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
